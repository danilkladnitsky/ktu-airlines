name: Deploy to dev staging

on:
  push:
    branches:
      - dev

jobs:
  push-images:
    name: Build and publish images
    runs-on: ubuntu-latest
    env:
      frontend_rep: ${{ secrets.DOCKERHUB_USERNAME }}/ktu-airlines.frontend
      backend_rep: ${{ secrets.DOCKERHUB_USERNAME }}/ktu-airlines.backend
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Push backend image
        uses: docker/build-push-action@v4
        with:
          context: backend
          push: true
          tags: ${{env.backend_rep}}:latest
          cache-from: type=registry,ref=${{env.backend_rep}}:latest
          cache-to: type=inline
          platforms: linux/x86_64
      -
        name: Push frontend image
        uses: docker/build-push-action@v4
        with:
          context: frontend
          push: true
          tags: ${{env.frontend_rep}}:latest
          cache-from: type=registry,ref=${{env.frontend_rep}}:latest
          cache-to: type=inline
          platforms: linux/x86_64

  pull-images:
    name: Pull and run images
    runs-on: ktu-airlines
    needs: push-images
    env:
      frontend_rep: ${{ secrets.DOCKERHUB_USERNAME }}/ktu-airlines.frontend
      backend_rep: ${{ secrets.DOCKERHUB_USERNAME }}/ktu-airlines.backend
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      
  build-app:
    name: Build and publish services
    environment: DEV
    runs-on: ktu-airlines
    needs: pull-images
    steps:
      -
        uses: SpicyPizza/create-envfile@v1.3
        with:
          envkey_PG_PORT: ${{ secrets.PG_PORT }}
          envkey_PG_USER: ${{ secrets.PG_USER }}
          envkey_PG_PASSWORD: ${{ secrets.PG_PASSWORD }}
          envkey_PG_DB: ${{ secrets.PG_DB }}
          envkey_PG_HOST: ${{ secrets.PG_HOST }}
          envkey_APP_PORT: ${{ secrets.APP_PORT }}
          envkey_JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
          envkey_SWAGGER_USER: ${{ secrets.SWAGGER_USER }}
          envkey_SWAGGER_PASSWORD: ${{ secrets.SWAGGER_PASSWORD }}
          envkey_BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          envkey_API_HOST: ${{ secrets.API_HOST }}
          file_name: .env
          fail_on_empty: false
      -
        name: Copy env to frontend
        run: cp .env frontend/.env
      -
        name: Pull last images
        run: docker compose pull
      -
        name: Stop services
        run: docker compose --env-file .env down  
      -
        name: Build services
        run: docker compose --env-file .env build
      -
        name: Run services
        run: docker compose --env-file .env up -d
      -
        name: Check services
        run: docker ps -a